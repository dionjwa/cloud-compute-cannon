#!/usr/bin/env bash

set -e

echo "TRAVIS_BRANCH=$TRAVIS_BRANCH"
echo "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
echo "TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG"

TRAVIS=1

GIT_TAG=`git rev-parse HEAD`
if [ ! -z "$TRAVIS_COMMIT" ]; then
	GIT_TAG=$TRAVIS_COMMIT
fi
GIT_TAG=${GIT_TAG:0:8}

#Then run the tests
NPM_VERSION=$(cat package.json \
  | grep version \
  | head -1 \
  | awk -F: '{ print $2 }' \
  | sed 's/[",]//g' \
  | tr -d '[[:space:]]')

echo "VERSION=$GIT_TAG"
echo "NPM_VERSION=$NPM_VERSION"
echo "TRAVIS_TAG=$TRAVIS_TAG"

# Sanity check on versions
./bin/version-check

#First build locally the docker images for the minimal DCC server
bin/build-docker-images

# Only run the tests on PRs
if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" != "false" ] && [ "$TRAVIS_REPO_SLUG" == "dionjwa/docker-cloud-compute" ];
	then
		echo "Running tests"
		TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG TRAVIS=1 PWD=$PWD VERSION=$GIT_TAG docker-compose -f docker-compose.travis.yml run --rm dcc.tests
fi

if [ "$TRAVIS_PULL_REQUEST" == "false" ] && [ "$TRAVIS_REPO_SLUG" == "dionjwa/docker-cloud-compute" ] && [ "v$NPM_VERSION" == "$TRAVIS_TAG" ];
	then
		echo "Publishing to dockerhub: dionjwa/docker-cloud-compute:${NPM_VERSION}"
		# This assumes there is an image to publish
		if [ ! -z "$DOCKER_USERNAME" ] && [ ! -z "$DOCKER_PASSWORD" ]; then
			#Make sure we are logged in
			docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
			DOCKER_REPO="dionjwa/docker-cloud-compute" bin/publish-docker
		else
			echo "DOCKER_USERNAME and DOCKER_PASSWORD are not set, skipping docker image push to docker.io";
		fi
	else
		echo "No tag, not publishing image to dockerhub"
fi

